import pandas as pd
df = pd.read_excel('https://github.com/DasolYang/python_for_data_analysis/raw/master/fav_food_info.xlsx', sheet_name = 'Sheet1')
df

#   Number	Age	Sex	Height	Weight	Favorite Food
#0	1	      30	  1	  183	    82	    1
#1	2	      28	  2	  160	    62	    3
#2	3	      27	  1	  178	    77	    2
#3	4	      23	  1	  172	    70	    2
#4	5	      25	  1	  168	    72	    3
#5	6	      27	  1	  179	    77	    1
#6	7	      26	  1	  169	    71	    1
#7	8	      29	  1	  171	    75	    3
#8	9	      34	  2	  158	    60	    2
#9	10	    31	  1	  183	    77	    3
#10	11	    26	  2	  162	    59	    1
#11	12	    26	  1	  173	    70	    2
#12	13	    35	  1	  173	    68	    3
#13	14	    24	  1	  176	    66	    3
#14	15	    29	  2	  170	    70	    2
#15	16	    33	  1	  177	    72	    2
#16	17	    38	  2	  159	    55	    1
#17	18	    26	  1	  166	    69	    3
#18	19	    26	  1	  169	    66	    2
#19	20	    28	  2	  159	    60	    2


df.sort_values('Height', ascending = False)

df.sort_values(['Height','Weight'], ascending = False)

df.sort_values(['Height','Weight'], ascending = [False, True])

df['Height'].describe()
# basic stats
#count     20.00000
#mean     170.25000
#std        7.81951
#min      158.00000
#25%      165.00000
#50%      170.50000
#75%      176.25000
#max      183.00000
#Name: Height, dtype: float64

df['Sex'].value_counts()
#1    14
#2     6
#Name: Sex, dtype: int64

df['Sex'].value_counts(normalize=True)

#1    0.7
#2    0.3
#Name: Sex, dtype: float64

df['Sex'].value_counts(normalize=True) * 100

freq = df['Sex'].value_counts() # series
ratio = df['Sex'].value_counts(normalize=True) # series
df_freq = pd.DataFrame([freq, ratio], index=['Freq','Ratio(%)']) # data frame
df_freq

#	        1	    2
#Freq	    14.0	6.0
#Ratio(%)	0.7	  0.3

pd.pivot_table(df, index='Sex', aggfunc = 'size')
Sex
#1    14
#2     6
#dtype: int64

df_pv_1 = pd.pivot_table(df, index='Sex')
df_pv_1

#       Age	      Favorite Food	Height	    Number	  Weight
#Sex					
#  1	  27.714286	2.214286	    174.071429	9.714286	72.285714
#  2	  30.500000	1.833333	    161.333333	12.333333	61.000000

df_pv_1.apply(lambda x: round(x, 2))

df_pv_2 = pd.pivot_table(df, index = ['Sex','Favorite Food'])
df_pv_2.apply(lambda x: round(x,2))

#                     Age	    Height	  Number	Weight
#Sex	Favorite Food				
#1	              1	  27.67	  177.00	  4.67	  76.67
#                 2	  27.00	  173.80	  10.80	  71.00
#                 3	  28.33	  172.83	  11.33	  71.17
#2	              1	  32.00	  160.50	  14.00	  57.00
#                 2	  30.33	  162.33	  14.67	  63.33
#                 3	  28.00	  160.00	  2.00	  62.00


df_pv_3 = pd.pivot_table(df, index='Sex',columns='Favorite Food',values='Weight')
df_pv_3.apply(lambda x: round(x, 1))

#Favorite Food	1	    2	    3
#Sex			
#   1	          76.7	71.0	71.2
#   2	          57.0	63.3	62.0


df_food = pd.DataFrame(['Korean','American','Italian'], index = [1,2,3,], columns=['type of Food'])
df_food
#   type of Food
#1	Korean
#2	American
#3	Italian

# how 'lefe' means left dataframe is center datafrme
# right_index = True  making df_food's index same as df
df_merged = pd.merge(df, df_food, how='left',left_on='Favorite Food',right_index=True)
df_merged
#	  Number	Age	Sex	Height	Weight	Favorite Food	type of Food
#0	1	      30	1	  183	    82	        1	          Korean
#1	2	      28	2	  160	    62	        3	          Italian
#2	3	      27	1	  178	    77	        2	          American
#3	4	      23	1	  172	    70	        2	          American
#4	5	      25	1	  168	    72	        3	          Italian
#5	6	      27	1	  179	    77        	1	          Korean
#6	7	      26	1	  169	    71        	1	          Korean
#7	8	      29	1	  171	    75        	3	          Italian
#8	9	      34	2	  158	    60        	2	          American
#9	10	    31	1	  183	    77      	  3	          Italian
#10	11	    26	2	  162	    59       	  1	          Korean
#11	12	    26	1	  173	    70        	2	          American
#12	13	    35	1	  173	    68	        3	          Italian
#13	14	    24	1	  176	    66	        3	          Italian
#14	15	    29	2	  170	    70	        2         	American
#15	16	    33	1	  177	    72  	      2	          American
#16	17	    38	2	  159	    55	        1	          Korean
#17	18	    26	1	  166	    69	        3	          Italian
#18	19	    26	1	  169	    66	        2	          American
#19	20	    28	2	  159	    60	        2	          American


df.corr()

#               Number	  Age	      Sex	        Height	Weight	  Favorite Food
#Number	        1.000000	0.228479	0.208141	-0.313440	-0.495021	0.079022
#Age	          0.228479	1.000000	0.334697	-0.147492	-0.239750	-0.104107
#Sex	          0.208141	0.334697	1.000000	-0.765901	-0.751269	-0.227276
#Height	        -0.313440	-0.147492	-0.765901	1.000000	0.882939	0.038434
#Weight	        -0.495021	-0.239750	-0.751269	0.882939	1.000000	0.068082
#Favorite Food	0.079022	-0.104107	-0.227276	0.038434	0.068082	1.000000


# 'fav_food_info.xlsx' should be in same jupyter notebook
df_dtype = pd.read_excel('fav_food_info.xlsx', sheet_name='Sheet1',
                         index_col=0,
                         dtype={'Number': 'object', 'Sex': 'object', 'Favorite Food': 'object'})
                         # make Number, Sex, Favorite Food as string
df_dtype

df_dtype.corr()
#	      Age	        Height	    Weight
#Age	  1.000000	  -0.147492	  -0.239750
#Height	-0.147492	  1.000000	  0.882939
#Weight	-0.239750	  0.882939	  1.000000

pd.pivot_table(df_dtype, index='Sex')
#	    Age	    Height	    Weight
#Sex			
#1	27.714286	174.071429	72.285714
#2	30.500000	161.333333	61.000000

pd.pivot_table(df_dtype, index=['Sex', 'Favorite Food'])
		              Age	        Height	    Weight
Sex	Favorite Food			
1	        1	      27.666667	  177.000000	76.666667
          2	      27.000000	  173.800000	71.000000
          3	      28.333333	  172.833333	71.166667
2	        1	      32.000000	  160.500000	57.000000
          2	      30.333333	  162.333333	63.333333
          3	      28.000000	  160.000000	62.000000

df_dtype['Weight'] < 80
#Number
#1     False
#2      True
#3      True
#4      True
#5      True
#6      True
#7      True
#8      True
#9      True
#10     True
#11     True
#12     True
#13     True
#14     True
#15     True
#16     True
#17     True
#18     True
#19     True
#20     True
#Name: Weight, dtype: bool

df_dtype[df_dtype['Weight'] <= 80]

df_dtype['Height(m)'] = df_dtype['Height'] / 100
df_dtype['BMI'] = round(df_dtype['Weight'] / pow(df_dtype['Height(m)'], 2),1)
df_dtype
#	      Age	Sex	Height	Weight	Favorite Food	Weight(m)	Height(m)	BMI
#Number								
#1	    30	1	  183	    82	      1	          0.82	    1.83	  24.5
#2	    28	2	  160	    62	      3	          0.62	    1.60	  24.2
#3	    27	1	  178	    77	      2	          0.77	    1.78	  24.3
#4	    23	1	  172	    70	      2	          0.70	    1.72	  23.7
#5	    25	1	  168	    72	      3	          0.72	    1.68	  25.5
#6	    27	1	  179	    77	      1	          0.77	    1.79	  24.0
#7	    26	1	  169	    71	      1	          0.71	    1.69	  24.9
#8	    29	1	  171	    75	      3	          0.75	    1.71	  25.6
#9	    34	2	  158	    60	      2	          0.60	    1.58	  24.0
#10	    31	1	  183	    77	      3	          0.77	    1.83	  23.0
#11	    26	2	  162	    59	      1	          0.59	    1.62	  22.5
#12	    26	1	  173	    70	      2	          0.70	    1.73	  23.4
#13	    35	1	  173	    68	      3	          0.68	    1.73	  22.7
#14	    24	1	  176	    66	      3	          0.66	    1.76	  21.3
#15	    29	2	  170	    70	      2	          0.70	    1.70	  24.2
#16	    33	1	  177	    72	      2	          0.72	    1.77	  23.0
#17	    38	2	  159	    55	      1	          0.55	    1.59	  21.8
#18	    26	1	  166	    69	      3	          0.69	    1.66	  25.0
#19	    26	1	  169	    66	      2	          0.66	    1.69	  23.1
#20	    28	2	  159	    60	      2	          0.60	    1.59	  23.7

def categorize_age(age):
    return '{}~{}'.format(age // 5 * 5, (age // 5+1) *5-1)
print(categorize_age(23))
print(categorize_age(29))
print(categorize_age(31))
print(categorize_age(35))

#20~24
#25~29
#30~34
#35~39

df_dtype['Age Group'] = df_dtype['Age'].apply(categorize_age)
df_cat_pv = pd.pivot_table(df_dtype, index='Age Group', columns = 'Favorite Food', values = 'Weight')
df_cat_pv.apply(lambda x: round(x, 1))


#Favorite Food	  1	    2 	  3
#Age Group			
#20~24	        NaN	  70.0	66.0
#25~29	        69.0	68.6	69.5
#30~34	        82.0	66.0	77.0
#35~39	        55.0	NaN	  68.0

df_dtype.to_excel('fav_food_info_new.xlsx') # make new file



def check_BMI(bmi):
    if bmi > 35:
        category = 'Severely obese'
    if 35 >= bmi > 30:
        category = 'Moderately obese'
    if 30 >= bmi > 25:
        category = 'Overweight'
    if 25 >= bmi > 18.5:
        category = 'Healthy weight'
    if 18.5 >= bmi > 16:
        category = 'Underweight'
    if 16 >= bmi > 15:
        category = 'Severely underweight'
    if 15 >= bmi:
        category = 'Very severely underweight'
    return '{}'.format(category)

df_dtype['Check BMI'] = df_dtype['BMI'].apply(check_BMI)

pd.crosstab(df_dtype['Check BMI'], df_dtype['Favorite Food'])

#Favorite Food	1	2	3
#Check BMI			
#Healthy weight	5	8	5
#Overweight	0	0	2


