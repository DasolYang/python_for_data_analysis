

import matplotlib
import matplotlib.pyplot as plt
%matplotlib inline
%matplotlib nbagg
import numpy as np
import pandas as pd

data = pd.Series(np.random.randn(10).cumsum(), index = np.arange(1,100, 10))
data
#1    -0.211922
#11   -1.845929
#21   -1.189778
#31   -0.593403
#41    0.125666
#51    0.303806
#61   -0.512650
#71   -0.528604
#81   -1.772279
#91   -2.451087
#dtype: float64

data.plot()
### line plot (graph)
#<matplotlib.axes._subplots.AxesSubplot at 0x3c76c05518>

df = pd.DataFrame(np.random.randn(10, 4).cumsum(axis = 0),
                 columns = ['a','b','c','d'],
                 index = np.arange(1,100,10))
df
#   a	        b	        c	        d
#1	-0.289572	-0.310348	-0.113512	0.801220
#11	-2.102289	1.166147	-0.144888	0.534018
#21	-0.582556	1.740339	-0.550245	1.284837
#31	-2.265390	0.859835	-1.928444	2.102858
#41	-1.108825	-0.066795	-0.230090	3.334807
#51	-0.450909	2.035243	-0.027833	3.038317
#61	1.007118	1.782855	1.401937	3.159978
#71	1.580789	0.859247	-0.277398	2.738905
#81	0.078336	2.083364	0.243622	3.509729
#91	0.774748	1.144611	-0.121307	3.317143

df.plot()
### line plot (graph)
#<matplotlib.axes._subplots.AxesSubplot at 0x3c76c41390>

df['b'].plot()
### line plot (graph) of column 'b'
#<matplotlib.axes._subplots.AxesSubplot at 0x3c76c38ef0>

data2 = pd.Series(np.random.rand(16), index = list('abcdefghijklmnop'))
data2
#a    0.979008
#b    0.197147
#c    0.018681
#d    0.353689
#e    0.367218
#f    0.326922
#g    0.840040
#h    0.138768
#i    0.117041
#j    0.519924
#k    0.968568
#l    0.531606
#m    0.174508
#n    0.717154
#o    0.243211
#p    0.866877
#dtype: float64
 
data2.plot(kind = 'bar') # vertival bar
###  vertival bar chart (graph)
#<matplotlib.axes._subplots.AxesSubplot at 0x3c76da5128>

data2.plot(kind = 'barh') # horizontal bar
###  horizontal bar chart (graph)
#<matplotlib.axes._subplots.AxesSubplot at 0x3c76e373c8>

data2 = pd.DataFrame(np.random.rand(6,4),
                    index = ['one','two','three','four','five','six'],
                    columns = pd.Index(['a','b','c','d'], name = 'Genus'))
data2
#Genus	a	      b       	c	        d
#one	0.972960	0.769113	0.229786	0.525625
#two	0.128709	0.906916	0.866046	0.033147
#three	0.362327	0.095431	0.999369	0.088149
#four	0.291317	0.268340	0.971444	0.571693
#five	0.129106	0.599177	0.984019	0.550700
#six	0.069450	0.863002	0.799886	0.310227

data2.plot(kind= 'bar')
#
#<matplotlib.axes._subplots.AxesSubplot at 0x3c76f6cd30>

data2.plot(kind = 'barh', stacked = True)
### horizontal bar graph (values in each columns into one line)
#<matplotlib.axes._subplots.AxesSubplot at 0x3c76faa208>

######################################## Histagram ########################################

# histagram does not need index
data3 = pd.Series(np.random.normal(0, 1, size = 200))
data3
##
0      1.036317
1      0.161380
2      0.032308
3     -1.866579
4      1.625979
5     -0.464226
6      1.062626
7      0.544618
8      0.408345
9      0.661641
10    -0.064526
11    -0.632651
12    -0.961940
13     0.475684
14     0.583569
15    -0.321461
16     1.246501
17    -1.352118
18    -0.827584
19     0.426254
20     0.261711
21    -0.186788
22     0.663680
23     1.812566
24     0.376484
25     0.630024
26    -0.116273
27     0.297583
28    -1.148937
29    -1.479647
         ...   
170    0.075139
171    0.241128
172    0.558740
173    2.031123
174    0.384803
175   -0.106094
176    0.939329
177    1.072535
178    1.187996
179    0.946840
180   -0.890491
181    0.781775
182   -0.357748
183    1.108674
184   -0.635067
185    0.305702
186    1.025769
187   -0.952198
188   -0.323059
189   -0.214204
190   -2.090384
191    0.239312
192    0.589657
193   -1.161706
194   -0.480722
195   -1.093095
196    0.323248
197   -1.020718
198    1.307909
199   -0.224221
Length: 200, dtype: float64
##
data3.hist()
##

data3.hist(bins=50)
##

data3.hist(bins =100, normed = True)
##

s1 = np.random.normal(1, 1, size=(100, 1))
s2 = np.random.normal(-2, 4, size=(100, 1))
x = np.concatenate((s1,s2), axis = 1)
x
##
array([[  1.90084679,  -1.45777343],
       [  1.04541084,  -1.55198615],
       [  1.9707624 ,  -6.99822385],
       [  4.23576103,  -2.71550546],
       [  0.45338303,   2.22322482],
       [  0.93845791,  -0.38372725],
       [  2.65883684,   4.64126364],
       [  1.04901291,  -6.46791164],
       [  0.46563223,  -5.52284822],
       [  0.16034193,  -0.31876194],
       [  3.03764315,  -4.04654092],
       [  1.38065692,  -0.94285809],
       [  1.5533752 ,  -6.03665101],
       [ -0.26299411,  -6.34459059],
       [  0.47347215,   3.00792456],
       [  2.62562814, -11.06934939],
       [ -0.652786  , -10.63429417],
       [  2.63428503,  -8.57013067],
       [  1.58709921,  -2.4665726 ],
       [  0.47218591,  -9.23165502],
       [  2.4697073 ,  -2.83570254],
       [  1.68011468,   4.58317354],
       [  1.16424613,  -5.84492315],
       [ -0.54416416, -12.21670708],
       [  1.60581386,   1.01498003],
       [  1.80515662,   0.13568002],
       [  1.19877307,  -3.06040924],
       [  1.71306842,   1.31467559],
       [  1.41909179,   4.2570049 ],
       [  0.1048572 ,  -1.49932723],
       [  2.14792237,   0.19411667],
       [  0.27710038,  -5.38566522],
       [  1.28698871,  -4.01422165],
       [  0.6146551 ,   2.24661678],
       [ -0.30983007,  -7.65448964],
       [  1.96086849,  -3.5976373 ],
       [  1.51436652,   0.82536251],
       [  0.24796175,  -3.31634142],
       [  1.47437991,  -6.18124496],
       [  1.62696549,   0.27570292],
       [  0.95886638,  -4.02829334],
       [  0.31790186,   2.19817869],
       [  1.51522319,  -4.30285157],
       [  1.07644847,   1.93840614],
       [ -1.60648475,  -8.83476443],
       [  1.36221213,  -4.89609   ],
       [  2.01940949,  -6.31899263],
       [  0.74687054,   1.18953875],
       [  0.76228633,  -2.48948219],
       [  1.63105597, -10.00603969],
       [  1.0606343 ,   3.58388136],
       [  0.60014226,  -3.69013249],
       [  2.16312207,  -2.29351339],
       [  1.83402048,  -6.07414039],
       [ -1.47657074,  -2.7720648 ],
       [  2.40561263,  -5.93146845],
       [  0.63339539,   2.69562924],
       [  0.46321455,   2.69211125],
       [  1.84973088,  -3.05276811],
       [  1.62564613,   0.6317943 ],
       [ -0.59563885,   2.80582723],
       [  0.09230645,  -3.67842504],
       [  0.40210344,  -4.56106411],
       [ -2.14274556,  -8.32845242],
       [  1.37394659,  -0.93868361],
       [ -0.60401772,   7.75831311],
       [ -1.74427362,  -7.48756761],
       [  0.51530278,   1.74978827],
       [  0.03386914,  -1.56148684],
       [  0.86590435,  -8.03865546],
       [  0.49582186,  -1.59153029],
       [  0.85489305,  -7.63507423],
       [  1.40183881,  -0.28183121],
       [  0.37889612,  -1.55095612],
       [  0.6869954 ,  -0.09289172],
       [  2.05912123,  -5.32203152],
       [ -0.20394818,  -8.2109935 ],
       [  0.71696781,  -3.78839748],
       [ -0.90990763,  -0.12505764],
       [  2.3507823 ,   3.91300379],
       [ -0.24184811,  -0.20207041],
       [  1.24461406,   0.70056299],
       [  1.38569167,  -2.35913585],
       [  1.04315357, -10.16327242],
       [  3.11719515,   5.80278921],
       [ -0.01926363,   1.55235627],
       [ -0.07007912,  -0.04601695],
       [  2.18887099,   4.55930169],
       [ -0.61473707,   6.3380442 ],
       [ -0.1809422 ,  -1.54893302],
       [  1.15469756,  -7.39157107],
       [  2.84550281,  -1.36681924],
       [ -1.26753534, -15.63957338],
       [  1.33398357,  -4.83106051],
       [  0.28199202,  -1.9813932 ],
       [  2.06470891,  -5.28437109],
       [  2.47025159,  -0.56678685],
       [  1.7686072 ,  -2.48306735],
       [  1.04171381,  -2.21255652],
       [  2.08308145,  -0.11268682]])
##

data3 = pd.DataFrame(x, columns = ['s1','s2'])
data3
##
  s1	      s2
0	1.900847	-1.457773
1	1.045411	-1.551986
2	1.970762	-6.998224
3	4.235761	-2.715505
4	0.453383	2.223225
5	0.938458	-0.383727
6	2.658837	4.641264
7	1.049013	-6.467912
8	0.465632	-5.522848
9	0.160342	-0.318762
10	3.037643	-4.046541
11	1.380657	-0.942858
12	1.553375	-6.036651
13	-0.262994	-6.344591
14	0.473472	3.007925
15	2.625628	-11.069349
16	-0.652786	-10.634294
17	2.634285	-8.570131
18	1.587099	-2.466573
19	0.472186	-9.231655
20	2.469707	-2.835703
21	1.680115	4.583174
22	1.164246	-5.844923
23	-0.544164	-12.216707
24	1.605814	1.014980
25	1.805157	0.135680
26	1.198773	-3.060409
27	1.713068	1.314676
28	1.419092	4.257005
29	0.104857	-1.499327
...	...	...
70	0.495822	-1.591530
71	0.854893	-7.635074
72	1.401839	-0.281831
73	0.378896	-1.550956
74	0.686995	-0.092892
75	2.059121	-5.322032
76	-0.203948	-8.210994
77	0.716968	-3.788397
78	-0.909908	-0.125058
79	2.350782	3.913004
80	-0.241848	-0.202070
81	1.244614	0.700563
82	1.385692	-2.359136
83	1.043154	-10.163272
84	3.117195	5.802789
85	-0.019264	1.552356
86	-0.070079	-0.046017
87	2.188871	4.559302
88	-0.614737	6.338044
89	-0.180942	-1.548933
90	1.154698	-7.391571
91	2.845503	-1.366819
92	-1.267535	-15.639573
93	1.333984	-4.831061
94	0.281992	-1.981393
95	2.064709	-5.284371
96	2.470252	-0.566787
97	1.768607	-2.483067
98	1.041714	-2.212557
99	2.083081	-0.112687
100 rows Ã— 2 columns
##

plt.scatter(data3['s1'],data3['s2'])

<matplotlib.collections.PathCollection at 0x3c78574320>

################################################# changing the shape of plot ####################

fig = plt.figure() # make the empty figure

axi1 = fig.add_subplot(2, 2, 1)
### 1,2 number size of figure (2 x 2)
### 3 number is going to be on the up left corner
### 1  2
### 3  4
### 1 = subplot = ax1
axi2 = fig.add_subplot(2, 2, 2)
axi3 = fig.add_subplot(2, 2, 3)
plt.plot(np.random.randn(50).cumsum())
##

plt.plot(np.random.randn(200).cumsum())
##


axi1.hist(np.random.randn(100), bins = 20) #bins = number of bar in x axis
##
(array([ 1.,  0.,  3.,  2.,  6.,  5.,  9.,  6.,  3., 11., 12.,  5.,  4.,
        10.,  5.,  4.,  3.,  4.,  1.,  6.]),
 array([-2.10483399, -1.90045664, -1.69607928, -1.49170192, -1.28732457,
        -1.08294721, -0.87856985, -0.6741925 , -0.46981514, -0.26543778,
        -0.06106042,  0.14331693,  0.34769429,  0.55207165,  0.756449  ,
         0.96082636,  1.16520372,  1.36958107,  1.57395843,  1.77833579,
         1.98271314]),
 <a list of 20 Patch objects>)
 ##

axi2.scatter(np.arange(30), np.arange(30) +3 * np.random.randn(30))
##

fig, axes = plt.subplots(2,3)
##

axes
##
array([[<matplotlib.axes._subplots.AxesSubplot object at 0x0000003C78754780>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x0000003C787805C0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x0000003C787A6860>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x0000003C787CEA20>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x0000003C787F8C50>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x0000003C7882B080>]],
      dtype=object)
##

